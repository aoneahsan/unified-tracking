name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linting
        run: yarn lint

      - name: Run type checking
        run: yarn build:nodoc

      - name: Run tests
        run: yarn test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Check build output
        run: |
          ls -la dist/
          if [ ! -f "dist/esm/src/index.js" ]; then
            echo "Build failed: index.js not found"
            exit 1
          fi

  verify-web:
    name: Verify Web Build
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Verify web build
        run: yarn verify:web

  verify-android:
    name: Verify Android Build
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Verify Android build
        run: |
          cd android
          ./gradlew clean build test
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

  verify-ios:
    name: Verify iOS Build
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Setup iOS environment
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          xcodebuild -version

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Verify iOS build
        run: |
          cd ios
          xcodebuild -workspace Plugin.xcworkspace -scheme Plugin -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

  package-health:
    name: Package Health Check
    runs-on: ubuntu-latest
    needs: [verify-web, verify-android, verify-ios]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package
        run: yarn build

      - name: Pack package
        run: npm pack

      - name: Check package size
        run: |
          SIZE=$(du -k *.tgz | cut -f1)
          echo "Package size: ${SIZE}KB"
          if [ $SIZE -gt 5000 ]; then
            echo "Warning: Package size is larger than 5MB"
          fi

      - name: Install package globally for testing
        run: |
          PACKAGE_NAME=$(ls *.tgz)
          npm install -g $PACKAGE_NAME

      - name: Test package imports
        run: |
          node -e "
            try {
              const ut = require('unified-tracking');
              console.log('✅ Main package import successful');
            } catch (e) {
              console.error('❌ Main package import failed:', e.message);
              process.exit(1);
            }
            
            try {
              const react = require('unified-tracking/react');
              console.log('✅ React package import successful');
            } catch (e) {
              console.error('❌ React package import failed:', e.message);
              process.exit(1);
            }
            
            try {
              const capacitor = require('unified-tracking/capacitor');
              console.log('✅ Capacitor package import successful');
            } catch (e) {
              console.error('❌ Capacitor package import failed:', e.message);
              process.exit(1);
            }
          "

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: |
          yarn audit --level moderate || true
          npm audit --audit-level moderate || true

      - name: Check for known vulnerabilities
        run: |
          npx audit-ci --moderate || true

  compatibility-test:
    name: Compatibility Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run basic tests
        run: yarn test

      - name: Test build
        run: yarn build:nodoc
